{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class FormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.userprofileForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: [''],\n      address: this.fb.group({\n        address1: ['', Validators.required],\n        address2: [''],\n        state: ['', Validators.required],\n        zip: ['', Validators.required]\n      }),\n      email: ['', Validators.required],\n      phoneNo: ['', Validators.required],\n      department: ['']\n    });\n  }\n\n  onSubmit() {\n    //console.warn(this.userprofileForm.value);\n    var firstName = this.userprofileForm.controls['firstName'].value;\n    var email = this.userprofileForm.controls['email'].value;\n    var phoneNo = this.userprofileForm.controls['phoneNo'].value;\n    console.log('First Name is :: ' + firstName);\n    console.log(\"Address >> Address1 :: \" + this.userprofileForm.get(['address', 'address1']).value);\n    console.log(\"Address >> State :: \" + this.userprofileForm.get(['address', 'state']).value);\n    console.log(\"Address >> Zip :: \" + this.userprofileForm.async(params, type), {\n      get\n    }('address')?.get('zip').value);\n    console.log('Email is :: ' + email);\n    console.log('Phone Number is :: ' + phoneNo);\n  }\n\n}\n\nFormComponent.ɵfac = function FormComponent_Factory(t) {\n  return new (t || FormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\n\nFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormComponent,\n  selectors: [[\"app-form\"]],\n  decls: 61,\n  vars: 2,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"f\", \"ngForm\"], [\"type\", \"text\", \"formControlName\", \"firstName\"], [\"type\", \"text\", \"formControlName\", \"lastName\"], [\"formGroupName\", \"address\"], [\"type\", \"text\", \"formControlName\", \"address1\"], [\"type\", \"text\", \"formControlName\", \"address2\"], [\"type\", \"text\", \"formControlName\", \"state\"], [\"type\", \"text\", \"formControlName\", \"zip\"], [\"type\", \"text\", \"formControlName\", \"email\"], [\"type\", \"text\", \"formControlName\", \"phoneNo\"], [\"formControlName\", \"department\"], [\"type\", \"radio\", \"id\", \"IT\", \"name\", \"department\", \"value\", \"IT\"], [\"for\", \"IT\"], [\"type\", \"radio\", \"id\", \"paper\", \"name\", \"department\", \"value\", \"paper\"], [\"for\", \"paper\"], [\"type\", \"radio\", \"id\", \"hydro\", \"name\", \"department\", \"value\", \"hydro\"], [\"for\", \"hydro\"], [\"type\", \"radio\", \"id\", \"turbo\", \"name\", \"department\", \"value\", \"turbo\"], [\"for\", \"turbo\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function FormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \" First Name: \");\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\")(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \" Last Name: \");\n      i0.ɵɵelement(9, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\")(11, \"br\");\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\");\n      i0.ɵɵtext(14, \" Address 1: \");\n      i0.ɵɵelement(15, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"br\")(17, \"br\");\n      i0.ɵɵelementStart(18, \"label\");\n      i0.ɵɵtext(19, \" Address 2: \");\n      i0.ɵɵelement(20, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\")(22, \"br\");\n      i0.ɵɵelementStart(23, \"label\");\n      i0.ɵɵtext(24, \" State: \");\n      i0.ɵɵelement(25, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"br\")(27, \"br\");\n      i0.ɵɵelementStart(28, \"label\");\n      i0.ɵɵtext(29, \" Zip Code: \");\n      i0.ɵɵelement(30, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(31, \"br\")(32, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(33, \"label\");\n      i0.ɵɵtext(34, \" Email: \");\n      i0.ɵɵelement(35, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(36, \"br\")(37, \"br\");\n      i0.ɵɵelementStart(38, \"label\");\n      i0.ɵɵtext(39, \" Phone Number: \");\n      i0.ɵɵelement(40, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"br\")(42, \"br\");\n      i0.ɵɵelementStart(43, \"div\", 11);\n      i0.ɵɵtext(44, \" Departments: \");\n      i0.ɵɵelement(45, \"input\", 12);\n      i0.ɵɵelementStart(46, \"label\", 13);\n      i0.ɵɵtext(47, \"IT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(48, \"input\", 14);\n      i0.ɵɵelementStart(49, \"label\", 15);\n      i0.ɵɵtext(50, \"Paper\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(51, \"input\", 16);\n      i0.ɵɵelementStart(52, \"label\", 17);\n      i0.ɵɵtext(53, \"Hydro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(54, \"input\", 18);\n      i0.ɵɵelementStart(55, \"label\", 19);\n      i0.ɵɵtext(56, \"Turbo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(57, \"br\")(58, \"br\");\n      i0.ɵɵelementStart(59, \"button\", 20);\n      i0.ɵɵtext(60, \" Submit \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.userprofileForm);\n      i0.ɵɵadvance(59);\n      i0.ɵɵproperty(\"disabled\", !ctx.userprofileForm.valid);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","FormComponent","constructor","fb","group","firstName","required","lastName","address","address1","address2","state","zip","email","phoneNo","department","onSubmit","userprofileForm","controls","value","console","log","get","async","params","type","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Prerak Patel\\project\\src\\app\\pages\\form\\form.component.ts","C:\\Users\\Prerak Patel\\project\\src\\app\\pages\\form\\form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Validators, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent{\n\n  constructor(private fb: FormBuilder) { }\n  userprofileForm = this.fb.group(\n    {\n      firstName: ['',Validators.required],\n      lastName: [''],\n      address: this.fb.group({\n        address1: ['',Validators.required],\n        address2: [''],\n        state: ['',Validators.required],\n        zip: ['',Validators.required],\n      }),\n      email: ['',Validators.required],\n      phoneNo: ['',Validators.required],\n      department: [''],\n    });\n\n    onSubmit(){\n      //console.warn(this.userprofileForm.value);\n      var firstName = this.userprofileForm.controls['firstName'].value;\n      var email = this.userprofileForm.controls['email'].value;\n      var phoneNo = this.userprofileForm.controls['phoneNo'].value;\n      \n      console.log('First Name is :: ' + firstName);\n      console.log(\"Address >> Address1 :: \" + this.userprofileForm.get(['address','address1']).value);\n      console.log(\"Address >> State :: \" + this.userprofileForm.get(['address','state']).value);\n      console.log(\"Address >> Zip :: \" + this.userprofileForm.async (params:type) => {\n\tget\n}('address')?.get('zip').value);\n      console.log('Email is :: ' + email);\n      console.log('Phone Number is :: ' + phoneNo);\n    }\n    \n  \n\n}\n","<form #f=\"ngForm\" [formGroup]=\"userprofileForm\" (ngSubmit)=\"onSubmit()\">\n\n    <label>\n        First Name: \n        <input type=\"text\" formControlName=\"firstName\">\n    </label><br><br>\n\n    <label>\n        Last Name: \n        <input type=\"text\" formControlName=\"lastName\">\n    </label><br><br>\n\n    <div formGroupName=\"address\">\n        <label>\n            Address 1: \n            <input type=\"text\" formControlName=\"address1\">\n        </label><br><br>\n\n        <label>\n            Address 2: \n            <input type=\"text\" formControlName=\"address2\">\n        </label><br><br>\n\n        <label>\n            State: \n            <input type=\"text\" formControlName=\"state\">\n        </label><br><br>\n\n        <label>\n            Zip Code: \n            <input type=\"text\" formControlName=\"zip\">\n        </label><br><br>\n    </div>\n\n    <label>\n        Email: \n        <input type=\"text\" formControlName=\"email\">\n    </label><br><br>\n\n    <label>\n        Phone Number: \n        <input type=\"text\" formControlName=\"phoneNo\">\n    </label><br><br>\n\n    <div formControlName=\"department\">\n        Departments: \n        <input type=\"radio\" id=\"IT\" name=\"department\" value=\"IT\">\n        <label for=\"IT\">IT</label>\n        <input type=\"radio\" id=\"paper\" name=\"department\" value=\"paper\">\n        <label for=\"paper\">Paper</label>\n        <input type=\"radio\" id=\"hydro\" name=\"department\" value=\"hydro\">\n        <label for=\"hydro\">Hydro</label>\n        <input type=\"radio\" id=\"turbo\" name=\"department\" value=\"turbo\">\n        <label for=\"turbo\">Turbo</label>\n    </div><br><br>\n\n    <button type=\"submit\" [disabled]=\"!userprofileForm.valid\">\n        Submit\n    </button>\n</form >"]},"metadata":{},"sourceType":"module"}